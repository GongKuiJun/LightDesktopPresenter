option java_outer_classname = "LdpProtocol";
option optimize_for = SPEED;
enum ConnectionType {   REMOTE_DESKTOP_CONTROL = 1;   REMOTE_VOLUME_CONTROL = 2;}enum DisconnectionType {   FROM_SERVER = 1;   FROM_SCREEN_THREAD = 2;   FROM_VOLUME_THREAD = 3;}message LdpAuthRequest {   optional string Password = 1;}message LdpAuthResponse {   required bool isSuccess = 1 ;}message LdpClientInfoRequest {   required string IP = 1;   required string OS = 2;   required string DeviceName = 3;}message LdpDisconnectRequest {   required DisconnectionType Type = 1 ;}message LdpKeyboardInfoResponse {   optional string Key = 1;}message LdpMouseInfoResponse {   optional int32 X = 1 ;   optional int32 Y = 2 ;   optional MouseType Type = 3 ;}message LdpPacket {   required PacketType Type = 1 ;   optional LdpAuthRequest AuthRequest = 2;   optional LdpAuthResponse AuthResponse = 3;   optional LdpClientInfoRequest ClientInfoRequest = 4;   optional LdpPreparableInfoRequest PreparableInfoRequest = 5;   optional LdpPreparableInfoResponse PreparableInfoResponse = 6;   optional LdpScreenRequest ScreenRequest = 7;   optional LdpScreenResponse ScreenResponse = 8;   optional LdpDisconnectRequest DisconnectRequest = 9;   optional LdpMouseInfoResponse MouseInfoResponse = 10;   optional LdpKeyboardInfoResponse KeyboardInfoResponse = 11;   optional LdpVolumeInfoRequest VolumeInfoRequest = 12;}message LdpPreparableInfoRequest {   required ConnectionType Type = 1 ;}message LdpPreparableInfoResponse {   optional int32 ScreenWidth = 1 ;   optional int32 ScreenHeight = 2 ;}message LdpRectangle {   required int32 Left = 1 ;   required int32 Top = 2 ;   required int32 Right = 3 ;   required int32 Bottom = 4 ;}message LdpScreenRequest {}message LdpScreenResponse {   required bytes CompressedScreen = 1;   required int32 BaseLenght = 2 ;   required LdpRectangle Rect = 3;}message LdpVolumeInfoRequest {   optional int32 Volume = 1 ;   optional bool IsMute = 2 ;}enum MouseType {   LEFT_CLICK = 1;   RIGHT_CLICK = 2;   LEFT_DOUBLE_CLICK = 3;   NONE = 4;}enum PacketType {   AUTH_REQUEST = 1;   AUTH_RESPONSE = 2;   CLIENT_INFO_REQUEST = 3;   PREPARABLE_INFO_REQUEST = 4;   PREPARABLE_INFO_RESPONSE = 5;   SCREEN_REQUEST = 6;   SCREEN_RESPONSE = 7;   VOLUME_INFO_REQUEST = 8;   MOUSE_INFO_RESPONSE = 9;   KEYBOARD_INFO_RESPONSE = 10;   DISCONNECT_REQUEST = 11;}